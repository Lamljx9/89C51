C51 COMPILER V9.56.0.0   LCD12864                                                          01/10/2018 19:34:14 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN ..\OBJ\lcd12864.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE ..\HARDWARE\LCD12864\lcd12864.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\HARD
                    -WARE\LCD12864) DEBUG OBJECTEXTEND PRINT(.\lcd12864.lst) OBJECT(..\OBJ\lcd12864.obj)

line level    source

   1          #include "lcd12864.h"
   2          #include <intrins.h>
   3          
   4          
   5          ///* Î»±äÁ¿ÉùÃ÷ */
   6          //sbit Busy = P2^7;               // Ã¦±êÖ¾ BF Î» -> BF=H£ºÄÚ²¿ÕýÔÚÖ´ÐÐ²Ù×÷;BF=L£º¿ÕÏÐ×´Ì¬
   7          //sbit Reset = P3^0;              // ¸´Î»
   8          
   9          //sbit RS = P3^1;                 // Êý¾Ý\ÃüÁîÑ¡Ôñ¶Ë -> ¸ßµçÆ½£ºÊý¾ÝD0-D7½«ËÍÈëÏÔÊ¾RAM£»µÍµçÆ½£ºÊý¾ÝD0-D7½
             -«ËÍÈëÖ¸Áî¼Ä´æÆ÷Ö´ÐÐ
  10          //sbit E = P3^2;                  // ¶ÁÐ´Ê¹ÄÜ£¬¸ßµçÆ½ÓÐÐ§£¬ÏÂ½µÑØËø¶¨Êý¾Ý
  11          //sbit RW = P3^3;                 // ¶Á\Ð´Ñ¡Ôñ¶Ë -> ¸ßµçÆ½£º¶ÁÈ¡Êý¾Ý£»µÍµçÆ½£ºÐ´ÈëÊý¾Ý
  12          
  13          //sbit CS1 = P3^4;                // Æ¬Ñ¡ÔñÐÅºÅ: µÍµçÆ½Ê±Ñ¡ÔñÇ°64ÁÐ ×óÆÁÄ»
  14          //sbit CS5 = P3^5;                // Æ¬Ñ¡ÔñÐÅºÅ: µÍµçÆ½Ê±Ñ¡Ôñºó64ÁÐ ÓÒÆÁÄ»
  15          
  16          
  17          /*************************************************************************
  18           Function    : LCD×´Ì¬¼ì²â
  19           Description : ¼ì²âÃ¦ÐÅºÅBFÎ»
  20          **************************************************************************/
  21          void Check_Busy()
  22          {
  23   1              E = 1;                             // ¶ÁÐ´Ê¹ÄÜ -> ¸ßµçÆ½ÓÐÐ§£¬ÏÂ½µÑØËø¶¨Êý¾Ý
  24   1              RS = 0;                            // Êý¾Ý\ÃüÁî Ñ¡Ôñ -> ¸ßµçÆ½:Êý¾Ý  µÍµçÆ½:ÃüÁî
  25   1              RW = 1;                            // ¶Á\Ð´ Ñ¡Ôñ -> ¸ßµçÆ½£º¶Á£»µÍµçÆ½£ºÐ´
  26   1              LcdDataPort = 0xff;                // ËÍ1µ½Êý¾Ý¶Ë¿Ú
  27   1              while(!Busy);                     // ÅÐ¶ÏBFÎ»×´Ì¬ÊÇ·ñ¾ÍÐ÷ ÊÕµ½ 1 Ìø³öÑ­»·    BF=H£ºÄÚ²¿ÕýÔÚÖ´ÐÐ²Ù×÷;BF=L£
             -º¿ÕÏÐ×´Ì¬
  28   1      }
  29          
  30          
  31          
  32          
  33          /*************************************************************************
  34           Function    : Ð´¿ØÖÆÃüÁî
  35           Description : NONE
  36          **************************************************************************/
  37          void Write_Command(u8 command)
  38          {
  39   1              Check_Busy();                                   // ÏÈ¼ì²â×´Ì¬
  40   1              
  41   1              E = 1;                                          // ¶ÁÐ´Ê¹ÄÜ
  42   1              RS = 0;                                         // Ñ¡ÔñÐ´ÃüÁî
  43   1              RW = 0;                                         // Ð´Èë
  44   1              LcdDataPort = command;                          // ËÍÈëÃüÁîµ½¶Ë¿ÚP2
  45   1              E = 0;                                          // ¶ÁÐ´Ê¹ÄÜ:ÏÂ½µÑØËø¶¨Êý¾Ý
  46   1              _nop_();
  47   1      }
  48          
  49          
  50          /*************************************************************************
  51           Function    : Ð´ÏÔÊ¾Êý¾Ý
  52           Description : NONE
C51 COMPILER V9.56.0.0   LCD12864                                                          01/10/2018 19:34:14 PAGE 2   

  53          **************************************************************************/
  54          void Write_Data(u8 dat)
  55          {
  56   1              Check_Busy();                                   // ÏÈ¼ì²â×´Ì¬
  57   1              
  58   1              E = 1;                                          // ¶ÁÐ´Ê¹ÄÜ
  59   1              RS = 1;                                         // Ñ¡ÔñÐ´Êý¾Ý
  60   1              RW = 0;                                         // Ð´Èë
  61   1              LcdDataPort = dat;                              // ËÍÈëÊý¾Ýµ½¶Ë¿ÚP2
  62   1              E = 0;                                          // ¶ÁÐ´Ê¹ÄÜ:ÏÂ½µÑØËø¶¨Êý¾Ý
  63   1              _nop_();
  64   1      }
  65          
  66          
  67          /*************************************************************************
  68           Function    : ÆÁÄ»Ñ¡Ôñ
  69           Description : 0-È«ÆÁ, 1-×óÆÁ, 2-ÓÒÆÁ, 3-²»Ñ¡
  70          **************************************************************************/
  71          void Select_Screen(u8 screen)
  72          {
  73   1              switch(screen)
  74   1              {
  75   2                      case 0:
  76   2                                      CS1 = 0;                            //   CS1            CS2               ÆÁÄ»
  77   2                                      _nop_();                            //    
  78   2                                      CS2 = 0;                            //    0          0        È«ÆÁ
  79   2                                      _nop_();                            //    0          1        ×óÆÁ
  80   2                                      break;                             //    1          0        ÓÒÆÁ
  81   2                                                                  //    1          1        ²»Ñ¡
  82   2                      case 1:
  83   2                                      CS1 = 0;
  84   2                                      _nop_();
  85   2                                      CS2 = 1;
  86   2                                      _nop_();
  87   2                                      break;
  88   2                      
  89   2                      case 2:
  90   2                                      CS1 = 1;
  91   2                                      _nop_();
  92   2                                      CS2 = 0;
  93   2                                      _nop_();
  94   2                                      break;
  95   2                      
  96   2                      case 3:
  97   2                                      CS1 = 1;
  98   2                                      _nop_();
  99   2                                      CS2 = 1;
 100   2                                      _nop_();
 101   2                                      break;
 102   2              }
 103   1      }
 104          
 105          
 106          /*************************************************************************
 107           Function    : Éè¶¨ÏÔÊ¾Î»ÖÃ
 108           Description : 
 109          **************************************************************************/
 110          void Set_Line(u8 line)                     //line -> 0 : 7
 111          {
 112   1              line = line & 0x07;
 113   1              line = line | 0xb8;                    //1011 1xxx
 114   1              Write_Command(line);
C51 COMPILER V9.56.0.0   LCD12864                                                          01/10/2018 19:34:14 PAGE 3   

 115   1      }
 116          
 117          void Set_Columm(u8 columm)                 //columm -> 0 :63
 118          {
 119   1              columm = columm & 0x3f;
 120   1              columm = columm | 0x40;                //01xx xxxx
 121   1              Write_Command(columm);
 122   1      }
 123          
 124          
 125          
 126          /*************************************************************************
 127           Function    : ÉèÖÃÏÔÊ¾¿ªÊ¼ÐÐ
 128           Description : 
 129          **************************************************************************/
 130          void Set_StartLine(u8 startline)         //startline -> 0 : 63
 131          {
 132   1              startline = startline & 0x3f;
 133   1              startline = startline | 0xc0;         //11xxxxxx
 134   1              Write_Command(startline);
 135   1      }
 136          
 137          
 138          /*************************************************************************
 139           Function    : ÇåÆÁ
 140           Description : 0-È«ÆÁ, 1-×óÆÁ, 2-ÓÒÆÁ, 3-²»Ñ¡
 141          **************************************************************************/
 142          void Clear_Screen(u8 screen)   
 143          {
 144   1              u8 x,y;
 145   1              Select_Screen(screen);
 146   1              for(x=0;x<8;x++)
 147   1              {
 148   2                      Set_Line(x);
 149   2                      Set_Columm(0);
 150   2                      for(y=0;y<64;y++)
 151   2                      {
 152   3                              Write_Data(0);
 153   3                      }
 154   2              }
 155   1              
 156   1      }
 157          
 158          
 159          /*************************************************************************
 160           Function    : ÏÔÊ¾¿ª¹Ø
 161           Description : 1-¿ªÏÔÊ¾ 0-¹ØÏÔÊ¾
 162          **************************************************************************/
 163          void On_Off(u8 onoff)
 164          {
 165   1              if(onoff == 1)
 166   1              {
 167   2                      Write_Command(0x3f);          // ¿ªÏÔÊ¾ 0011 1111
 168   2              }
 169   1              else Write_Command(0x3e);        // ¹ØÏÔÊ¾ 0011 1110
 170   1      }
 171          
 172          
 173          /*************************************************************************
 174           Function    : ¸´Î»
 175           Description : µÍµçÆ½ÓÐÐ§
 176          **************************************************************************/
C51 COMPILER V9.56.0.0   LCD12864                                                          01/10/2018 19:34:14 PAGE 4   

 177          void Lcd_Reset()
 178          {
 179   1              Reset = 0;
 180   1              delay_ms(5);
 181   1              Reset = 1;
 182   1              delay_ms(5);
 183   1              On_Off(1);
 184   1      }
 185          
 186          
 187          /*************************************************************************
 188           Function    : ³õÊ¼»¯
 189           Description : 
 190          **************************************************************************/
 191          void Lcd_Init()
 192          {
 193   1              Lcd_Reset();                      // ¸´Î»
 194   1              On_Off(0);                        // ÆÁÄ»ÏÔÊ¾¹Ø
 195   1              Clear_Screen(0);                  // ÇåÆÁ
 196   1              Set_Line(0);                      // µÚÒ»ÐÐ
 197   1              Set_Columm(0);                    // µÚÒ»ÁÐ
 198   1              Set_StartLine(0);                 // µÚÒ»ÁÐ
 199   1              On_Off(1);                        // ÆÁÄ»ÏÔÊ¾¿ª
 200   1      }
 201          
 202          
 203          /*************************************************************************
 204           Function    : ÏÔÊ¾Ò»¸öÍ¼»­ 64*64
 205           Description : °ËÐÐ¸ß¶È Ã¿ÐÐ¿í64
 206          **************************************************************************/
 207          void Show_6464(u8 line,u8 columm,u8 *address)
 208          {
 209   1              u8 i;
 210   1              Set_Line(line);                    // µÚÒ»ÐÐ
 211   1              Set_Columm(columm);
 212   1              for(i=0;i<64;i++)                  // ¿í¶È64
 213   1              {
 214   2                      Write_Data(*(address++));
 215   2              }
 216   1              
 217   1              Set_Line(line+1);                  // µÚ¶þÐÐ
 218   1              Set_Columm(columm);
 219   1              for(i=0;i<64;i++)                  // ¿í¶È64
 220   1              {
 221   2                      Write_Data(*(address++));
 222   2              }
 223   1              
 224   1              Set_Line(line+2);                  // µÚÈýÐÐ
 225   1              Set_Columm(columm);
 226   1              for(i=0;i<64;i++)                  // ¿í¶È64
 227   1              {
 228   2                      Write_Data(*(address++));
 229   2              }
 230   1              
 231   1              Set_Line(line+3);                  // µÚËÄÐÐ
 232   1              Set_Columm(columm);
 233   1              for(i=0;i<64;i++)                  // ¿í¶È64
 234   1              {
 235   2                      Write_Data(*(address++));
 236   2              }
 237   1              
 238   1              Set_Line(line+4);                  // µÚÎåÐÐ
C51 COMPILER V9.56.0.0   LCD12864                                                          01/10/2018 19:34:14 PAGE 5   

 239   1              Set_Columm(columm);
 240   1              for(i=0;i<64;i++)                  // ¿í¶È64
 241   1              {
 242   2                      Write_Data(*(address++));
 243   2              }
 244   1              
 245   1              Set_Line(line+5);                  // µÚÁùÐÐ
 246   1              Set_Columm(columm);
 247   1              for(i=0;i<64;i++)                  // ¿í¶È64
 248   1              {
 249   2                      Write_Data(*(address++));
 250   2              }
 251   1              
 252   1              Set_Line(line+6);                  // µÚÆßÐÐ
 253   1              Set_Columm(columm);
 254   1              for(i=0;i<64;i++)                  // ¿í¶È64
 255   1              {
 256   2                      Write_Data(*(address++));
 257   2              }
 258   1              
 259   1              Set_Line(line+7);                  // µÚ°ËÐÐ
 260   1              Set_Columm(columm);
 261   1              for(i=0;i<64;i++)                  // ¿í¶È64
 262   1              {
 263   2                      Write_Data(*(address++));
 264   2              }
 265   1              
 266   1      
 267   1      }
 268          
 269          
 270          
 271          
 272          /*************************************************************************
 273           Function    : ÑÓÊ±º¯Êý
 274           Description : ·Ç¾«È·ÑÓÊ±
 275          **************************************************************************/
 276          void delay_ms(u16 xms)
 277          {
 278   1              u16 x,y;
 279   1              for(x=xms;x>0;x--)
 280   1              {
 281   2                      for(y=125;y>0;y--);
 282   2              }
 283   1      }
 284          
 285          
 286          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    467    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
